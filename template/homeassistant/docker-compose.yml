version: '2.4'

services:
  home-assistant:
    image: homeassistant/home-assistant:stable
    container_name: home-assistant
    hostname: docker-home-assistant
    mac_address: 02:42:2b:6f:65:19
    ports:
      - "8123:8123"
    environment:
      TZ: Europe/Berlin
    volumes:
      - home-assistant-data:/config
    restart: unless-stopped
    networks:
      qnet-static:
        ipv4_address: 192.168.65.19

  home-assistant-backup:
    image: blacklabelops/volumerize:latest
    container_name: home-assistant-backup
    hostname: docker-home-assistant-backup
    mac_address: 02:42:2b:6f:65:20
    env_file:
      # This file contains AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY:
      - /share/Container/container-station-data/env_vars.env
    environment:
      TZ: Europe/Berlin
      VOLUMERIZE_SOURCE: /source
      VOLUMERIZE_TARGET: s3://s3.eu-central-1.amazonaws.com/docker-volume-backups-qnap/home-assistant
      VOLUMERIZE_FULL_IF_OLDER_THAN: 7D
      VOLUMERIZE_JOBBER_TIME: 0 0 3 * * * # every day 3 am
    volumes:
      - home-assistant-data:/source # left out the ":ro" parameter for being able to restore within the same container with 'docker exec home-assistant-backup restore'
      - volumerize-cache:/volumerize-cache
    restart: unless-stopped
    networks:
      qnet-static:
        ipv4_address: 192.168.65.20

  home-assistant-configurator:
    image: causticlab/hass-configurator-docker:arm
    container_name: home-assistant-configurator
    hostname: docker-home-assistant-configurator
    mac_address: 02:42:2b:6f:65:21
    restart: unless-stopped
    ports:
      - "3218:3218/tcp"
    environment:
      TZ: Europe/Berlin
    volumes:
      - home-assistant-configurator-data:/config
      - home-assistant-data:/hass-config
    networks:
      qnet-static:
        ipv4_address: 192.168.65.21

volumes:
  home-assistant-data:
  volumerize-cache:
  home-assistant-configurator-data:

networks:
  qnet-static:
    external: true
    name: qnet-static-ip-network
